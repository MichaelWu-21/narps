version: 2
jobs:
  build:
    docker:
      - image: poldrack/narps-analysis
    steps:
      - add_ssh_keys:
          fingerprints:
            - "e4:d9:2a:de:d8:40:56:15:af:c7:34:93:ad:d2:85:d1"
      - checkout
      - run:
          name: static analysis and style check using flake8
          command: |
             pip install -U flake8
             flake8 ImageAnalyses
      - run:
          name: Get codecov
          command: python -m pip install codecov
      - run:
          name: run main narps tests
          command: |
             pip install -U pytest pytest-cov
             source /etc/fsl/5.0/fsl.sh; pytest --cov=./ImageAnalyses --cov-report=xml:/tmp/tests.xml ImageAnalyses/tests.py
      - run:
          name: run map analysis tests
          command: |
             pip install -U pytest pytest-cov
             source /etc/fsl/5.0/fsl.sh; pytest --cov-append --cov=./ImageAnalyses --cov-report=xml:/tmp/tests.xml ImageAnalyses/tests_maps.py
      - run:
          name: run consensus analysis tests
          command: |
             pip install -U pytest pytest-cov
             source /etc/fsl/5.0/fsl.sh; pytest --cov-append --cov=./ImageAnalyses --cov-report=xml:/tmp/tests.xml ImageAnalyses/tests_consensus.py
      - run:
          name: run thresholding simulations
          command: |
             pip install -U pytest pytest-cov
             source /etc/fsl/5.0/fsl.sh; pytest --cov-append --cov=./ImageAnalyses --cov-report=xml:/tmp/tests.xml ImageAnalyses/tests_threshold.py
      - run:
          name: run narps ALE tests
          command: |
             pip install -U pytest pytest-cov
             source /etc/fsl/5.0/fsl.sh; pytest -v --cov-append --cov=./ImageAnalyses --cov-report=xml:/tmp/tests.xml ImageAnalyses/tests_ale.py
          no_output_timeout: 1200
      - run:
          name: Submit test coverage
          command: |
            python -m codecov --file /tmp/tests.xml -e CIRCLE_JOB
      - run:
          name: run Decision analysis
          command: |
             cat /root/project/ImageAnalyses/*.Rmd | grep library >| /root/project/ImageAnalyses/R_libraries.R
             export NARPS_BASEDIR="/tmp/data"; Rscript -e 'library(knitr);library(rmarkdown);rmarkdown::render("/root/project/ImageAnalyses/DecisionAnalysis.Rmd","html_document", output_dir = "/tmp/data/figures")'
      - run:
          name: run PM analyses
          command: |
             export NARPS_BASEDIR="/tmp/data"; Rscript /root/project/PredictionMarketAnalyses/DataProcessing.R
             export NARPS_BASEDIR="/tmp/data"; Rscript -e 'library(knitr);library(rmarkdown);rmarkdown::render("/root/project/PredictionMarketAnalyses/PM_Analyses.Rmd","html_document", output_dir = "/tmp/data/PredictionMarkets/Figures")'
             export NARPS_BASEDIR="/tmp/data"; Rscript -e 'library(knitr);library(rmarkdown);rmarkdown::render("/root/project/PredictionMarketAnalyses/PM_Figures.Rmd","html_document", output_dir = "/tmp/data/PredictionMarkets/Figures")'
      - run:
          name: create results tarball
          command: |
             cd /tmp/data; tar zcvf results.tgz ./cached ./figures ./logs ./metadata ./image_diagnostics* ./output/unthresh_concat_zstat/hypo*_voxelmap.nii.gz ./output/overlap_binarized_thresh/hypo*.nii.gz ./output/consensus_analysis/hypo*_1-fdr.nii.gz ./output/ALE/hypo*_fdr_oneminusp.nii.gz ./output/cluster_maps ./output/correlation_unthresh ./PredictionMarkets
      - store_artifacts:
             path: /tmp/data/results.tgz
